@model IPagedList<HotelReservationsManager.Models.Room>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Common;

@{
    ViewData["Title"] = "Index";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
<script defer src="https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js"></script>

<script>
    $(document).ready(function () {
        var pageSize = Cookies.get("pageSize");
        if (pageSize !== undefined) {
            $(`#${pageSize}`).prop('checked', true);
        }
    });

    function UpCookie(evn) {
        Cookies.set("pageSize", evn.value);
        window.location = '@Url.Action("Index")';
    }

</script>

@{ 
    int? cap = 0;
    if((int)TempData["capacity"] != 0)
    {
        cap = (int)TempData["capacity"];
    }
    else
    {
        cap = null;
    }
    //visual fix to have an empty instead of 0
}

<h1>Index</h1>

<form asp-action="Index">
    <label for="capacity">Room Capacity</label>
    <input name="capacity" value="@cap" type="number" min="0"/>
    <br />
    <label for="lastName">Room Type</label>
    @*<input name="type" value="@TempData["type"]" />*@
    <select name="type" asp-items="ViewBag.type">
        <option value="Select Apartment Type">Select Apartment Type</option>
    </select>
    <br />
    <label for="bFree">Is Free?</label>
    @if ((bool)TempData["bFree"])
    {
        <input type="checkbox" name="bFree" value="true" checked />
    }
    else
    {
        <input type="checkbox" name="bFree" value="true"/>
        //checkbox val needs to be set to true or it doesn't work
    }
    <input hidden type="checkbox" name="bSearch" value="true" checked/>
    <br />
    <input type="submit" value="Search" />
</form>

<br />

<form asp-action="Index">
    <input type="submit" value="Load All"/>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="form-check form-check-inline">
    <input id="1" class="form-check-input" type="radio" name="inlineRadioOptions" value="1" onclick="UpCookie(this)">
    <label class="form-check-label" for="inlineRadio1">1</label>
</div>
<div class="form-check form-check-inline">
    <input id="10" class="form-check-input" type="radio" name="inlineRadioOptions" value="10" onclick="UpCookie(this)">
    <label class="form-check-label" for="inlineRadio1">10</label>
</div>
<div class="form-check form-check-inline">
    <input id="25" class="form-check-input" type="radio" name="inlineRadioOptions" value="25" onclick="UpCookie(this)">
    <label class="form-check-label" for="inlineRadio1">25</label>
</div>
<div class="form-check form-check-inline">
    <input id="50" class="form-check-input" type="radio" name="inlineRadioOptions" value="50" onclick="UpCookie(this)">
    <label class="form-check-label" for="inlineRadio1">50</label>
</div>

<table class="table">
    @*<thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.capacity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.free)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.bedAdultPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.bedChildPrice)
                </th>
                <th></th>
            </tr>
        </thead>*@
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.free)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.bedAdultPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.bedChildPrice)
                </td>
                <td>
                    @if (this.User.IsInRole("admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> 
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        <hr />
                    }
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))
